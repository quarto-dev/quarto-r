[{"path":"/articles/publishing.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Publishing","text":"quarto package includes several functions enable publish static interactive documents, websites, books RStudio Connect shinyapps.io. publishing RStudio Connect, simple content publishing (local rendering) well code publishing (rendering Connect) supported.","code":""},{"path":"/articles/publishing.html","id":"accounts","dir":"Articles","previous_headings":"","what":"Accounts","title":"Publishing","text":"publishing RStudio Connect shinyapps.io ensure account configured publishing. RStudio Connect, use rsconnect::connectUser() function server publishing . example: ’ll prompted authoring account web browser. shinyapps.io, use rsconnect::setAccountInfo() function. example: Note can copy paste code Tokens page shinyapps.io admin panel.","code":"rsconnect::connectUser(server = \"rsc.example.com\") rsconnect::setAccountInfo(name = 'norahjones', token = 'AB6783FD23', secret = '36x+k0bBy6W')"},{"path":"/articles/publishing.html","id":"documents","dir":"Articles","previous_headings":"","what":"Documents","title":"Publishing","text":"Use quarto_publish_doc() function publish single document RStudio Connect. Note first time publish specify server account want use publishing. example: Subsequent updates document don’t need specify server account: example renders content locally publishes just content server. can also render server (uploading source code required render). might want order create scheduled versions report update automatically underlying data changes. , add render = \"server\" argument:","code":"library(quarto) quarto_publish_doc(\"document.qmd\", server = \"rsc.example.com\", account = \"njones\") quarto_publish_doc(\"document.qmd\") quarto_publish_doc(\"document.qmd\",                     server = \"rsc.example.com\", account = \"njones\",                    render = \"server\")"},{"path":"/articles/publishing.html","id":"websites","dir":"Articles","previous_headings":"","what":"Websites","title":"Publishing","text":"Use quarto_publish_site() function publish website book RStudio Connect. Note first time publish specify server account want use publishing. example: Subsequent updates site don’t need specify server account: example renders content locally publishes just content server. can also render server (uploading source code required render). might want order create scheduled versions website update automatically underlying data changes. , add render = \"server\" argument:","code":"library(quarto) quarto_publish_site(server = \"rsc.example.com\", account = \"njones\") quarto_publish_site() quarto_publish_site(server = \"rsc.example.com\", account = \"njones\",                     render = \"server\")"},{"path":"/articles/publishing.html","id":"interactive-docs","dir":"Articles","previous_headings":"","what":"Interactive Docs","title":"Publishing","text":"can publish Shiny interactive documents either RStudio Connect shinyapps.io. publish RStudio Connect, specify server account want use publishing (required first publish ). example: publish shinyapps.io, use server = \"shinyapps.io\": services, subsequent publishes need provide server account:","code":"library(quarto) quarto_publish_app(\"shiny.qmd\", server = \"rsc.example.com\", account = \"njones\") quarto_publish_app(\"shiny.qmd\", server = \"shinyapps.io\") quarto_publish_app(\"shiny.qmd\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"JJ Allaire. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Allaire J (2022). quarto: R Interface 'Quarto' Markdown Publishing System. R package version 1.2, https://github.com/quarto-dev/quarto-r.","code":"@Manual{,   title = {quarto: R Interface to 'Quarto' Markdown Publishing System},   author = {JJ Allaire},   year = {2022},   note = {R package version 1.2},   url = {https://github.com/quarto-dev/quarto-r}, }"},{"path":"/index.html","id":"section","dir":"","previous_headings":"","what":"R Interface to Quarto Markdown Publishing System","title":"R Interface to Quarto Markdown Publishing System","text":"Quarto open-source scientific technical publishing system built Pandoc. quarto package provides R interface frequently used operations Quarto Command Line Interface (CLI). package requirement using Quarto R. Rather, provides R interface common Quarto operations users prefer work R console rather terminal, package authors want programatically interface Quarto. using Quarto R package, install Quarto CLI https://quarto.org/docs/get-started/.","code":""},{"path":"/index.html","id":"render-and-preview","dir":"","previous_headings":"","what":"Render and Preview","title":"R Interface to Quarto Markdown Publishing System","text":"following functions enable render preview Quarto documents projects:","code":""},{"path":"/index.html","id":"publishing","dir":"","previous_headings":"","what":"Publishing","title":"R Interface to Quarto Markdown Publishing System","text":"functions enable publish static interactive documents, websites, books RStudio Connect shinyapps.io:","code":""},{"path":"/index.html","id":"configuration","dir":"","previous_headings":"","what":"Configuration","title":"R Interface to Quarto Markdown Publishing System","text":"functions enable inspect Quarto installation well metadata Quarto documents projects:","code":""},{"path":"/reference/quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal package state — quarto","title":"Internal package state — quarto","text":"Internal package state","code":""},{"path":"/reference/quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal package state — quarto","text":"","code":"quarto"},{"path":"/reference/quarto.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal package state — quarto","text":"object class environment length 0.","code":""},{"path":"/reference/quarto_inspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect Quarto Input File or Project — quarto_inspect","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"Inspect Quarto project input path. Inspecting project returns config engines. Inspecting input path return formats, engine, dependent resources.","code":""},{"path":"/reference/quarto_inspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"","code":"quarto_inspect(input = \".\")"},{"path":"/reference/quarto_inspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"input input file project directory inspect.","code":""},{"path":"/reference/quarto_inspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"Named list. input files, list members engine, format, resources. projects list members engines config","code":""},{"path":"/reference/quarto_inspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"","code":"if (FALSE) { # Inspect input file file quarto_inspect(\"notebook.Rmd\")  # Inspect project quarto_inspect(\"myproject\") }"},{"path":"/reference/quarto_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to the quarto binary — quarto_path","title":"Path to the quarto binary — quarto_path","text":"Determine path quarto binary. Uses QUARTO_PATH environment variable defined, otherwise uses Sys.().","code":""},{"path":"/reference/quarto_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to the quarto binary — quarto_path","text":"","code":"quarto_path()"},{"path":"/reference/quarto_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to the quarto binary — quarto_path","text":"Path quarto binary (NULL found)","code":""},{"path":"/reference/quarto_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarto Preview — quarto_preview","title":"Quarto Preview — quarto_preview","text":"Render preview Quarto document website project.","code":""},{"path":"/reference/quarto_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarto Preview — quarto_preview","text":"","code":"quarto_preview(   file = NULL,   render = \"auto\",   port = \"auto\",   host = \"127.0.0.1\",   browse = TRUE,   watch = TRUE,   navigate = TRUE )  quarto_preview_stop()"},{"path":"/reference/quarto_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quarto Preview — quarto_preview","text":"file document website project directory preview (defaults current working directory) render website preview, recent execution results computational documents used render site (optimize startup time). want perform full render prior serving pass \"\" vector specific formats render. Pass \"default\" render default format site. document preview, document rendered prior preview (pass FALSE override ). port Port listen (defaults 4848) host Hostname bind (defaults 127.0.0.1) browse Open browser preview content. Defaults using RStudio Viewer running within RStudio.Pass function (e.g. utils::browseURL override behavior). watch Watch changes automatically reload browser. navigate Automatically navivate preview browser recently rendered document.","code":""},{"path":"/reference/quarto_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quarto Preview — quarto_preview","text":"Automatically reloads browser input files re-rendered document resources (e.g. CSS) change.","code":""},{"path":"/reference/quarto_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quarto Preview — quarto_preview","text":"","code":"if (FALSE) { # Preview the project in the current directory quarto_preview()  # Preview a document quarto_preview(\"document.qmd\")  # Preview the project in \"myproj\" directory and use external browser # (rather than RStudio Viewer) quarto_preview(\"myproj\", open = utils::browseURL)  # Stop any running quarto preview quarto_preview_stop() }"},{"path":"/reference/quarto_publish_doc.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish Quarto Documents — quarto_publish_doc","title":"Publish Quarto Documents — quarto_publish_doc","text":"Publish Quarto documents RStudio Connect ShinyApps","code":""},{"path":"/reference/quarto_publish_doc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish Quarto Documents — quarto_publish_doc","text":"","code":"quarto_publish_doc(   input,   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )  quarto_publish_app(   input = getwd(),   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )  quarto_publish_site(   input = getwd(),   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )"},{"path":"/reference/quarto_publish_doc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish Quarto Documents — quarto_publish_doc","text":"input input file project directory published. Defaults current working directory. name Name publishing (names must unique within account). Defaults name input. title Free-form descriptive title application. Optional; supplied, often displayed favor name. deploying new document, may supply title receive auto-generated name server Server name. Use \"shinyapps.io\" deploying applications Shinyapps. Use \"rpubs.com\" deploying documents RPubs. Otherwise use domain name IP address RStudio Connect server. account Account deploy application . parameter required initial deployment application multiple accounts configured system (see accounts). render local render locally publishing; server render server; none use whatever rendered content currently exists locally. (defaults local) metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). ... Named parameters pass along rsconnect::deployApp()","code":""},{"path":"/reference/quarto_publish_doc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish Quarto Documents — quarto_publish_doc","text":"","code":"if (FALSE) { library(quarto) quarto_publish_doc(\"mydoc.qmd\") quarto_publish_app(server = \"shinyapps.io\") quarto_publish_site(server = \"rstudioconnect.example.com\") }"},{"path":"/reference/quarto_render.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Markdown — quarto_render","title":"Render Markdown — quarto_render","text":"Render input file specified output format using quarto. input requires computations (e.g. Rmd Jupyter files) computations performed rendering.","code":""},{"path":"/reference/quarto_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Markdown — quarto_render","text":"","code":"quarto_render(   input = NULL,   output_format = NULL,   output_file = NULL,   execute = TRUE,   execute_params = NULL,   execute_dir = NULL,   execute_daemon = NULL,   execute_daemon_restart = FALSE,   execute_debug = FALSE,   use_freezer = FALSE,   cache = NULL,   cache_refresh = FALSE,   debug = FALSE,   quiet = FALSE,   pandoc_args = NULL,   as_job = getOption(\"quarto.render_as_job\", \"auto\") )"},{"path":"/reference/quarto_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Markdown — quarto_render","text":"input input file project directory rendered (defualts rendering project current working directory). output_format Target output format (defaults \"html\"). option \"\" render formats defined within file project. output_file name output file. using NULL output filename based filename input file. execute Whether execute embedded code chunks. execute_params list named parameters override custom params specified within YAML front-matter. execute_dir working directory execute embedded code chunks. execute_daemon Keep Jupyter kernel alive (defaults 300 seconds). Note option applicable rendering Jupyter notebooks Jupyter markdown. execute_daemon_restart Restart keepalive Jupyter kernel render. Note option applicable rendering Jupyter notebooks Jupyter markdown. execute_debug Show debug output Jupyter kernel. use_freezer Force use frozen computations incremental file render. cache Cache execution output (uses knitr cache jupyter-cache respectively Rmd Jupyter input files). cache_refresh Force refresh execution cache. debug Leave intermediate files place render. quiet Suppress warning messages. pandoc_args Additional command line options pass pandoc. as_job Render RStudio background job. Default \"auto\", render individual documents normally projects background jobs. Use quarto.render_as_job R option control default globally.","code":""},{"path":"/reference/quarto_render.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Markdown — quarto_render","text":"","code":"if (FALSE) { # Render R Markdown quarto_render(\"notebook.Rmd\") quarto_render(\"notebook.Rmd\", output_format = \"pdf\")  # Render Jupyter Notebook quarto_render(\"notebook.ipynb\")  # Render Jupyter Markdown quarto_render(\"notebook.md\") }"},{"path":"/reference/quarto_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Interactive Document — quarto_run","title":"Run Interactive Document — quarto_run","text":"Run Shiny interactive document. default, document rendered first run. previously rendered document, pass render - FALSE skip rendering.","code":""},{"path":"/reference/quarto_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Interactive Document — quarto_run","text":"","code":"quarto_run(   input,   render = TRUE,   port = getOption(\"shiny.port\"),   host = getOption(\"shiny.host\", \"127.0.0.1\"),   browse = TRUE )"},{"path":"/reference/quarto_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Interactive Document — quarto_run","text":"input input file run file server: shiny entry YAML front-matter. render Render document running . port Port listen (defaults 4848) host Hostname bind (defaults 127.0.0.1) browse Open browser preview content. Defaults using RStudio Viewer running within RStudio.Pass function (e.g. utils::browseURL override behavior).","code":""},{"path":"/reference/quarto_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check quarto version — quarto_version","title":"Check quarto version — quarto_version","text":"Determine specific version quartobinary found quarto_path(). returns 99.9.9 means using dev version.","code":""},{"path":"/reference/quarto_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check quarto version — quarto_version","text":"","code":"quarto_version()"},{"path":"/reference/quarto_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check quarto version — quarto_version","text":"numeric_version quarto version found","code":""}]
