[{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to quarto","title":"Contributing to quarto","text":"welcome contributions quarto R package. can contribute many ways: opening issues give feedback share ideas. fixing typos documentations submitting Pull Request (PR) fix opened issues submitting Pull Request (PR) suggest new features. (considered good practice open issues discuss ideas)","code":""},{"path":"https://quarto-dev.github.io/quarto-r/CONTRIBUTING.html","id":"to-submit-a-contribution-using-a-pull-request","dir":"","previous_headings":"","what":"To submit a contribution using a Pull Request:","title":"Contributing to quarto","text":"Fork repository make changes new branch specific PR. ok edit file repository using Edit button Github change simple enough. significant changes (e.g required fixing typos), ensure signed individual corporate contributor agreement appropriate. can send signed copy contribute@posit.co. Submit pull request. ok submit draft still working like feedback us. always good share open working . ’ll try responsive possible reviewing accepting pull requests. Appreciate contributions much!","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/dynamic-metadata.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Dynamic Metadata in Quarto Documents","text":"vignette demonstrates use write_yaml_metadata_block() dynamically set metadata Quarto documents based R computations. functionality addresses key limitation Quarto metadata must traditionally static defined document header. Important: use function Quarto documents, must include output: asis chunk option (#| output: asis) R code chunks. Without option, YAML metadata displayed text instead processed metadata.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/dynamic-metadata.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"Dynamic Metadata in Quarto Documents","text":"Let’s start basic example set metadata dynamically: Now can set metadata based computed values. Note #| output: asis chunk option - essential: generate YAML metadata block looks like body document: Quarto process metadata block additional metadata block frontmatter one. , wll make metadata available use throughout document. can used various ways, shortcodes conditional content. Using {{< meta key >}} shortcodes access metadata values: https://quarto.org/docs/authoring/variables.html#meta Using -meta attributes conditionally show/hide content based metadata values: https://quarto.org/docs/authoring/conditional.html#matching--metadata. metadata values must boolean. metadata block merged previous metadata blocks, existing metadata values can overwritten subsequent blocks.","code":"# Simulate some computed values user_type <- \"admin\" is_debug <- TRUE current_version <- \"2.1.0\" write_yaml_metadata_block(   user_level = user_type,   debug_mode = is_debug,   app_version = \"2.1.0\",   generated_at = format(Sys.time(), \"%Y-%m-%dT%H:%M:%S%z\") ) --- user_level: admin debug_mode: true app_version: 2.1.0 generated_at: 2025-06-24T11:53:23+0000 ---"},{"path":"https://quarto-dev.github.io/quarto-r/articles/dynamic-metadata.html","id":"example-using-metadata-with-conditional-content","dir":"Articles","previous_headings":"","what":"Example: Using Metadata with Conditional Content","title":"Dynamic Metadata in Quarto Documents","text":"Now ’ve set metadata, can use Quarto’s conditional content features: Current user level: admin App version: 2.1.0 Debug mode: true Debug Information content visible debug_mode true. Since set TRUE, message visible. Generated : 2025-06-24T11:53:23+0000","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/dynamic-metadata.html","id":"advanced-use-case-email-variant-testing","dir":"Articles","previous_headings":"","what":"Advanced Use Case: Email Variant Testing","title":"Dynamic Metadata in Quarto Documents","text":"One powerful application dynamic metadata variant emails using Quarto’s email format. example shows randomly select email variant conditionally display different content based selection: example demonstrates several advanced concepts: Random variant selection: Using sample() randomly choose one three email variants Dynamic metadata generation: Creating boolean metadata flags variant using sprintf() setNames() Conditional email content: variant shows different content (different datasets, subjects) based selected metadata flag Email-specific features: Using Quarto’s email format .subject divs .email-scheduled metadata Logging tracking: Recording variant selected analysis purposes","code":"--- title: test conditional emails format: email email-preview: true ---  Pick variant   ::: {.cell}  ```{.r .cell-code} variant <- sample(1:3, 1) ``` :::   --- is_email_variant_3: true ---  ::: {.email}  This email was sent from Quarto! With conditional output for condition 3  ::: {.content-visible when-meta=\"is_email_variant_1\"}  email body 1   ::: {.cell}  ```{.r .cell-code} head(mtcars) ```  ::: {.cell-output .cell-output-stdout}  ```                    mpg cyl disp  hp drat    wt  qsec vs am gear carb Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 ```   ::: :::   ::: {.subject} subject 1 :::  :::  ::: {.content-visible when-meta=\"is_email_variant_2\"}  email body 2    ::: {.cell}  ```{.r .cell-code} head(palmerpenguins::penguins) ```  ::: {.cell-output .cell-output-stdout}  ``` # A tibble: 6 × 8   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g   <fct>   <fct>              <dbl>         <dbl>             <int>       <int> 1 Adelie  Torgersen           39.1          18.7               181        3750 2 Adelie  Torgersen           39.5          17.4               186        3800 3 Adelie  Torgersen           40.3          18                 195        3250 4 Adelie  Torgersen           NA            NA                  NA          NA 5 Adelie  Torgersen           36.7          19.3               193        3450 6 Adelie  Torgersen           39.3          20.6               190        3650 # ℹ 2 more variables: sex <fct>, year <int> ```   ::: :::   ::: {.subject} subject 2 :::  :::  ::: {.content-visible when-meta=\"is_email_variant_3\"}  email body 3   ::: {.cell}  ```{.r .cell-code} praise::praise() ```  ::: {.cell-output .cell-output-stdout}  ``` [1] \"You are shining!\" ```   ::: :::   ::: {.subject} subject 3 :::  :::  ::: {.email-scheduled} TRUE :::  :::  ## Logging  Case: 3  Report run: 2025-06-24 11:53:23.521635"},{"path":"https://quarto-dev.github.io/quarto-r/articles/dynamic-metadata.html","id":"technical-details","dir":"Articles","previous_headings":"","what":"Technical Details","title":"Dynamic Metadata in Quarto Documents","text":"write_yaml_metadata_block() function generates YAML metadata block can inserted document body. accepts named arguments list, converted YAML format. yaml R package used YAML serialization: https://github.com/vubiostat/r-yaml Look documentation package details YAML formatted structured R objects. Currently, package write YAML additional specific handlers, non-default behavior: TRUE FALSE converted true false YAML, respectively.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/hello.html","id":"quarto-as-vignette-builder","dir":"Articles","previous_headings":"","what":"Quarto as vignette builder","title":"Quarto HTML Vignettes","text":"Add DESCRIPTION file:","code":"VignetteBuilder:     quarto"},{"path":"https://quarto-dev.github.io/quarto-r/articles/hello.html","id":"html-vignette-engines","dir":"Articles","previous_headings":"","what":"HTML Vignette Engines","title":"Quarto HTML Vignettes","text":"quarto R package registers vignette engines can used %\\VignetteEngine{} directives vignette headers. learn vignettes engine works, write vignette engines, see Writing R Extensions manual R Packages (2e) book. produce HTML vignette engine, add YAML header build HTML document using Quarto, suitable using vignette publish CRAN. Choice made create minimal HTML vignette default, built following changes based Quarto’s format: html defaults: HTML file produced standalone (.e. embed-resources: true) Bootstrap disabled (.e. theme: none minimal: true) custom CSS file provided. equivalent configurations set way can’t overriden YAML header vignette source file new configurations can set. Typical examples configurations adding table contents enabling rendering mathematical notation format options, e.g., MathJax. Specifically, two options can set following way: minimal default format deliberate limitation current implementation vignette engine. ensures HTML vignettes produced reasonable size can published CRAN without problems. Another limitation concerns interactive rendering. render vignette .qmd file using quarto render function, output based default HTML format Quarto vignette engine one. building vignette produce real results. details building vignettes available R Packages (2e) book. Intermediates resources created authoring workflow quarto render default format: html ignored package sources. Added .Rbuildignore (e.g usethis::use_build_ignore(\"vignettes/*_files\")) Added .gitignore (e.g. usethis::use_git_ignore(\"*_files\", \"vignettes\"))","code":"vignette: >   %\\VignetteIndexEntry{Vignette's Title}   %\\VignetteEngine{quarto::html}   %\\VignetteEncoding{UTF-8} --- format:    html:     theme: none     minimal: true     embed-resources: true     css: custom.css format:    html:     toc: true     html-math-method: mathjax vignette: >   %\\VignetteIndexEntry{Vignette's Title}   %\\VignetteEngine{quarto::html}   %\\VignetteEncoding{UTF-8}"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Publishing","text":"quarto package includes several functions enable publish static interactive documents, websites, books Posit Connect shinyapps.io. publishing Posit Connect, simple content publishing (local rendering) well code publishing (rendering Connect) supported.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"accounts","dir":"Articles","previous_headings":"","what":"Accounts","title":"Publishing","text":"publishing Posit Connect shinyapps.io ensure account configured publishing. Posit Connect, use rsconnect::connectUser() function server publishing . example: ’ll prompted authoring account web browser. shinyapps.io, use rsconnect::setAccountInfo() function. example: Note can copy paste code Tokens page shinyapps.io admin panel.","code":"rsconnect::connectUser(server = \"rsc.example.com\") rsconnect::setAccountInfo(name = 'norahjones', token = 'AB6783FD23', secret = '36x+k0bBy6W')"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"documents","dir":"Articles","previous_headings":"","what":"Documents","title":"Publishing","text":"Use quarto_publish_doc() function publish single document Posit Connect. Note first time publish specify server account want use publishing. example: Subsequent updates document don’t need specify server account: example renders content locally publishes just content server. can also render server (uploading source code required render). might want order create scheduled versions report update automatically underlying data changes. , add render = \"server\" argument:","code":"library(quarto) quarto_publish_doc(\"document.qmd\", server = \"rsc.example.com\", account = \"njones\") quarto_publish_doc(\"document.qmd\") quarto_publish_doc(\"document.qmd\",                     server = \"rsc.example.com\", account = \"njones\",                    render = \"server\")"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"websites","dir":"Articles","previous_headings":"","what":"Websites","title":"Publishing","text":"Use quarto_publish_site() function publish website book Posit Connect. Note first time publish specify server account want use publishing. example: Subsequent updates site don’t need specify server account: example renders content locally publishes just content server. can also render server (uploading source code required render). might want order create scheduled versions website update automatically underlying data changes. , add render = \"server\" argument:","code":"library(quarto) quarto_publish_site(server = \"rsc.example.com\", account = \"njones\") quarto_publish_site() quarto_publish_site(server = \"rsc.example.com\", account = \"njones\",                     render = \"server\")"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"interactive-docs","dir":"Articles","previous_headings":"","what":"Interactive Docs","title":"Publishing","text":"can publish Shiny interactive documents either Posit Connect shinyapps.io. publish Posit Connect, specify server account want use publishing (required first publish ). example: publish shinyapps.io, use server = \"shinyapps.io\": services, subsequent publishes need provide server account:","code":"library(quarto) quarto_publish_app(\"shiny.qmd\", server = \"rsc.example.com\", account = \"njones\") quarto_publish_app(\"shiny.qmd\", server = \"shinyapps.io\") quarto_publish_app(\"shiny.qmd\")"},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Theme Helpers","text":"quarto package includes functions help theme plotting table packages, example provide light dark renderings. functions return theme objects functions, applied differently depending package. vignette demonstrates adding background foreground colors outputs package. simple helper functions get started. need customize , functions can copied quarto-r.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"flextable","dir":"Articles","previous_headings":"","what":"flextable","title":"Theme Helpers","text":"Demonstrates flextable green foreground yellow background. Air quality Time Ozone Solar.R Wind Temp Month Day 12 149 12.6 74 5 3 23 299 8.6 65 5 7  194 8.6 69 5 10 41 190 7.4 67 5 1   14.3 56 5 5 36 118 8.0 72 5 2 18 313 11.5 62 5 4 19 99 13.8 59 5 8 8 19 20.1 61 5 9 28  14.9 66 5 6 Daily air quality measurements New York, May September 1973.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"ggiraph","dir":"Articles","previous_headings":"","what":"ggiraph","title":"Theme Helpers","text":"Demonstrates ggiraph interactive plot deep blue background mauve foreground.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"Theme Helpers","text":"Demonstrates ggplot2 plot near-black background green-grey foreground.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"gt","dir":"Articles","previous_headings":"","what":"gt","title":"Theme Helpers","text":"Demonstrates gt table light green background black foreground.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"plotly","dir":"Articles","previous_headings":"","what":"plotly","title":"Theme Helpers","text":"Demonstrates heatmaply interactive heatmap dark green background background light blue foreground.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/theme-helpers.html","id":"thematic","dir":"Articles","previous_headings":"","what":"thematic","title":"Theme Helpers","text":"Demonstrates patchwork plot dark red background light grey foreground.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"JJ Allaire. Author. Christophe Dervieux. Maintainer, author. Posit Software, PBC. Copyright holder, funder. Gordon Woodhull. Contributor.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Allaire J, Dervieux C (2025). quarto: R Interface 'Quarto' Markdown Publishing System. R package version 1.4.4.9015, https://github.com/quarto-dev/quarto-r.","code":"@Manual{,   title = {quarto: R Interface to 'Quarto' Markdown Publishing System},   author = {JJ Allaire and Christophe Dervieux},   year = {2025},   note = {R package version 1.4.4.9015},   url = {https://github.com/quarto-dev/quarto-r}, }"},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"quarto-","dir":"","previous_headings":"","what":"R Interface to Quarto Markdown Publishing System","title":"R Interface to Quarto Markdown Publishing System","text":"Quarto open-source scientific technical publishing system built Pandoc. quarto package provides R interface frequently used operations Quarto Command Line Interface (CLI). package requirement using Quarto R. Rather, provides R interface common Quarto operations users prefer work R console rather terminal, package authors want interface Quarto using scripts. using Quarto R package, install Quarto CLI https://quarto.org/docs/get-started/.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"R Interface to Quarto Markdown Publishing System","text":"Latest released version CRAN Latest dev version Github Latest build dev version r-universe Look Functions Reference page see list functions available package.","code":"# latest release version  install.packages(\"quarto\") # dev version pak::pak(\"quarto-dev/quarto-r\") # or remotes::install_github(\"quarto-dev/quarto-r\") install.packages('quarto', repos = c('https://quarto-dev.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Check is a directory is using quarto — is_using_quarto","title":"Check is a directory is using quarto — is_using_quarto","text":"function check directory using quarto looking _quarto.yml root least one .qmd file directory","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check is a directory is using quarto — is_using_quarto","text":"","code":"is_using_quarto(dir = \".\", verbose = FALSE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check is a directory is using quarto — is_using_quarto","text":"dir directory check verbose print message result check","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check is a directory is using quarto — is_using_quarto","text":"","code":"dir.create(tmpdir <- tempfile()) is_using_quarto(tmpdir) #> [1] FALSE file.create(file.path(tmpdir, \"_quarto.yml\")) #> [1] TRUE is_using_quarto(tmpdir) #> [1] TRUE unlink(tmpdir, recursive = TRUE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/new_blog_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new blog post — new_blog_post","title":"Create a new blog post — new_blog_post","text":"Creates (potentially opens) index.qmd file new blog post.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/new_blog_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new blog post — new_blog_post","text":"","code":"new_blog_post(   title,   dest = NULL,   wd = NULL,   open = rlang::is_interactive(),   call = rlang::current_env(),   ... )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/new_blog_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new blog post — new_blog_post","text":"title character string title post. converted title case via tools::toTitleCase(). dest character string (NULL) path within posts. default, title adapted directory name. wd optional working directory. NULL, current working used. open logical: default editor open window edit index.qmd file? call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. ... named list values added yaml header, date, author, categories, description, etc. date provided, current date used. author provided, whoami::fullname() used get user's name.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/new_blog_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new blog post — new_blog_post","text":"path index file.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto-package.html","id":null,"dir":"Reference","previous_headings":"","what":"quarto: R Interface to 'Quarto' Markdown Publishing System — quarto-package","title":"quarto: R Interface to 'Quarto' Markdown Publishing System — quarto-package","text":"Convert R Markdown documents 'Jupyter' notebooks variety output formats using 'Quarto'.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"quarto: R Interface to 'Quarto' Markdown Publishing System — quarto-package","text":"Maintainer: Christophe Dervieux cderv@posit.co (ORCID) Authors: JJ Allaire jj@posit.co (ORCID) contributors: Posit Software, PBC [copyright holder, funder] Gordon Woodhull [contributor]","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a Quarto extensions — quarto_add_extension","title":"Install a Quarto extensions — quarto_add_extension","text":"Add extension folder project running quarto add","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a Quarto extensions — quarto_add_extension","text":"","code":"quarto_add_extension(   extension = NULL,   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a Quarto extensions — quarto_add_extension","text":"extension extension install, either archive GitHub repository described documentation https://quarto.org/docs/extensions/managing.html. no_prompt prompt confirm approval download external extension. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line). quarto.quiet R option R_QUARTO_QUIET environment variable can used globally override function call (can useful debug tool calls quarto_* functions directly). Github Actions, always quiet = FALSE. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"extension-trust","dir":"Reference","previous_headings":"","what":"Extension Trust","title":"Install a Quarto extensions — quarto_add_extension","text":"Quarto extensions may execute code documents rendered. Therefore, trust author extension, recommend install use extension. default no_prompt = FALSE means function ask explicit approval used interactively, disallow installation.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install a Quarto extensions — quarto_add_extension","text":"","code":"if (FALSE) { # \\dontrun{ # Install a template and set up a draft document from a GitHub repository quarto_add_extension(\"quarto-ext/fontawesome\")  # Install a template and set up a draft document from a ZIP archive quarto_add_extension(\"https://github.com/quarto-ext/fontawesome/archive/refs/heads/main.zip\") } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if quarto is available and version meet some requirements — quarto_available","title":"Check if quarto is available and version meet some requirements — quarto_available","text":"function allows test Quarto available meets version requirement, min, max requirement.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if quarto is available and version meet some requirements — quarto_available","text":"","code":"quarto_available(min = NULL, max = NULL, error = FALSE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if quarto is available and version meet some requirements — quarto_available","text":"min Minimum version expected. max Maximum version expected error TRUE, throw error Quarto available meet requirement. Default FALSE.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if quarto is available and version meet some requirements — quarto_available","text":"logical. TRUE requirement met, FALSE otherwise.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_available.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if quarto is available and version meet some requirements — quarto_available","text":"min max provided, check Quarto version -two versions. non provided (keeping default NULL ), just check Quarto availability version return FALSE found.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if quarto is available and version meet some requirements — quarto_available","text":"","code":"# Is there an active version available ? quarto_available() #> [1] TRUE # check for a minimum requirement quarto_available(min = \"1.5\") #> [1] TRUE # check for a maximum version quarto_available(max = \"1.6\") #> [1] FALSE # only returns TRUE if Pandoc version is between two bounds quarto_available(min = \"1.4\", max = \"1.6\") #> [1] FALSE"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_binary_sitrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Check configurations for quarto binary used — quarto_binary_sitrep","title":"Check configurations for quarto binary used — quarto_binary_sitrep","text":"function check configuration quarto package R package detect possible difference version used RStudio IDE.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_binary_sitrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check configurations for quarto binary used — quarto_binary_sitrep","text":"","code":"quarto_binary_sitrep(verbose = TRUE, debug = FALSE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_binary_sitrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check configurations for quarto binary used — quarto_binary_sitrep","text":"verbose FALSE, return result check. debug TRUE, print information value set configurations.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_binary_sitrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check configurations for quarto binary used — quarto_binary_sitrep","text":"TRUE package using quarto binary RStudio IDE. FALSE otherwise difference detected quarto found. Use verbose = TRUE ordebug = TRUE get detailed information.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_binary_sitrep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check configurations for quarto binary used — quarto_binary_sitrep","text":"","code":"quarto_binary_sitrep(verbose = FALSE) #> [1] TRUE quarto_binary_sitrep(verbose = TRUE) #> ✔ quarto R package will use /opt/quarto/bin/quarto #> [1] TRUE quarto_binary_sitrep(debug = TRUE) #> ✔ quarto R package will use /opt/quarto/bin/quarto #> ℹ     It is configured to use the latest version found in the PATH environment variable. #> [1] TRUE"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quarto project — quarto_create_project","title":"Create a quarto project — quarto_create_project","text":"function calls quarto create project <type> <name>. creates new directory project name, inside requested parent directory, adds starter files appropriate project type.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quarto project — quarto_create_project","text":"","code":"quarto_create_project(   name,   type = \"default\",   dir = \".\",   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quarto project — quarto_create_project","text":"name name project directory created. type type project create. Quarto 1.4, can one default, website, blog, book, manuscript, confluence. dir directory create new Quarto project, .e. parent directory. no_prompt prompt approve creation new project folder. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line). quarto.quiet R option R_QUARTO_QUIET environment variable can used globally override function call (can useful debug tool calls quarto_* functions directly). Github Actions, always quiet = FALSE. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"quarto-version-required","dir":"Reference","previous_headings":"","what":"Quarto version required","title":"Create a quarto project — quarto_create_project","text":"function requires Quarto 1.4 higher. Use quarto_version() see current Quarto version.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quarto project — quarto_create_project","text":"","code":"if (FALSE) { # \\dontrun{ quarto_create_project(\"my-first-quarto-project\", dir = \"~/tmp\") } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect Quarto Input File or Project — quarto_inspect","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"Inspect Quarto project input path. Inspecting project returns config engines. Inspecting input path return formats, engine, dependent resources.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"","code":"quarto_inspect(input = \".\", profile = NULL, quiet = FALSE, quarto_args = NULL)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"input input file project directory inspect. profile Quarto project profile(s) use. Either character vector profile names NULL use default profile. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line). quarto.quiet R option R_QUARTO_QUIET environment variable can used globally override function call (can useful debug tool calls quarto_* functions directly). Github Actions, always quiet = FALSE. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"Named list. input files, list contains elements quarto, engines, formats, resources, fileInformation plus project file part Quarto project. projects, list contains elements quarto, dir, engines, config files.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"","code":"if (FALSE) { # \\dontrun{ # Inspect input file file quarto_inspect(\"notebook.Rmd\")  # Inspect project quarto_inspect(\"myproject\")  # Inspect project's advanced profile quarto_inspect(   input = \"myproject\",   profile = \"advanced\" ) } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_list_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"List Installed Quarto extensions — quarto_list_extensions","title":"List Installed Quarto extensions — quarto_list_extensions","text":"List Quarto Extensions folder project running quarto list","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_list_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Installed Quarto extensions — quarto_list_extensions","text":"","code":"quarto_list_extensions()"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_list_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Installed Quarto extensions — quarto_list_extensions","text":"data frame installed extensions NULL (invisibly) extensions installed.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_list_extensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Installed Quarto extensions — quarto_list_extensions","text":"","code":"if (FALSE) { # \\dontrun{ # List Quarto Extensions in this folder or project quarto_list_extensions() } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Log debug information to a configurable file — quarto_log","title":"Log debug information to a configurable file — quarto_log","text":"function logs messages file debug mode help diagnose issues Quarto vignettes pkgdown contexts.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log debug information to a configurable file — quarto_log","text":"","code":"quarto_log(   ...,   file = NULL,   append = TRUE,   timestamp = TRUE,   prefix = \"DEBUG: \" )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log debug information to a configurable file — quarto_log","text":"... Messages log (concatenated) file Path log file. NULL, uses get_log_file() determine file. Default ./quarto-r-debug.log configuration found. append Logical. messages appended file? Default TRUE. timestamp Logical. timestamp added? Default TRUE. prefix Character. Prefix add log entry. Default \"DEBUG: \".","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log debug information to a configurable file — quarto_log","text":"Invisibly returns TRUE logging occurred, FALSE otherwise","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log debug information to a configurable file — quarto_log","text":"Debug mode enabled automatically debugging Github Actions workflows, Quarto CLI's environment variable QUARTO_LOG_LEVEL set DEBUG.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":"configuration","dir":"Reference","previous_headings":"","what":"Configuration","title":"Log debug information to a configurable file — quarto_log","text":"Enable debugging messages: Set quarto.log.debug = TRUE (R_QUARTO_LOG_DEBUG = TRUE environment variable) Change log file path: Set quarto.log.file change file path (R_QUARTO_LOG_FILE environment variable) Default ./quarto-r-debug.log Automatic debug mode: Debug mode automatically debugging Github Actions workflows Quarto CLI's environment variable QUARTO_LOG_LEVEL set DEBUG","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log debug information to a configurable file — quarto_log","text":"","code":"if (FALSE) { # \\dontrun{ # Set log file via environment variable Sys.setenv(R_QUARTO_LOG_FILE = \"~/quarto-debug.log\")  # Or via option options(quarto.log.file = \"~/quarto-debug.log\")  # Enable debug mode options(quarto.log.debug = TRUE)  # Log some information quarto_log(\"Starting process\") quarto_log(\"R_LIBS:\", Sys.getenv(\"R_LIBS\")) quarto_log(\".libPaths():\", paste0(.libPaths(), collapse = \":\")) } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to the quarto binary — quarto_path","title":"Path to the quarto binary — quarto_path","text":"Determine path quarto binary. Uses QUARTO_PATH environment variable defined, otherwise uses Sys.().","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to the quarto binary — quarto_path","text":"","code":"quarto_path(normalize = TRUE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to the quarto binary — quarto_path","text":"normalize TRUE (default), normalize path using base::normalizePath().","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to the quarto binary — quarto_path","text":"Path quarto binary (NULL found)","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarto Preview — quarto_preview","title":"Quarto Preview — quarto_preview","text":"Render preview Quarto document website project.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarto Preview — quarto_preview","text":"","code":"quarto_preview(   file = NULL,   render = \"auto\",   port = \"auto\",   host = \"127.0.0.1\",   browse = TRUE,   watch = TRUE,   navigate = TRUE,   quiet = FALSE )  quarto_preview_stop()"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quarto Preview — quarto_preview","text":"file document website project directory preview (defaults current working directory) render website preview, recent execution results computational documents used render site (optimize startup time). want perform full render prior serving pass \"\" vector specific formats render. Pass \"default\" render default format site. document preview, document rendered prior preview (pass FALSE override ). port Port listen (defaults 4848) host Hostname bind (defaults 127.0.0.1) browse Open browser preview content. Defaults using RStudio Viewer running within RStudio.Pass function (e.g. utils::browseURL override behavior). watch Watch changes automatically reload browser. navigate Automatically navigate preview browser recently rendered document. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line)","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quarto Preview — quarto_preview","text":"Automatically reloads browser input files re-rendered document resources (e.g. CSS) change.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quarto Preview — quarto_preview","text":"","code":"if (FALSE) { # \\dontrun{ # Preview the project in the current directory quarto_preview()  # Preview a document quarto_preview(\"document.qmd\")  # Preview the project in \"myproj\" directory and use external browser # (rather than RStudio Viewer) quarto_preview(\"myproj\", open = utils::browseURL)  # Stop any running quarto preview quarto_preview_stop() } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish Quarto Documents — quarto_publish_doc","title":"Publish Quarto Documents — quarto_publish_doc","text":"Publish Quarto documents Posit Connect, ShinyApps, RPubs","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish Quarto Documents — quarto_publish_doc","text":"","code":"quarto_publish_doc(   input,   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )  quarto_publish_app(   input = getwd(),   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )  quarto_publish_site(   input = getwd(),   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish Quarto Documents — quarto_publish_doc","text":"input input file project directory published. Defaults current working directory. name Name publishing (names must unique within account). Defaults name input. title Free-form descriptive title application. Optional; supplied, often displayed favor name. deploying new document, may supply title receive auto-generated name account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. render local render locally publishing; server render server; none use whatever rendered content currently exists locally. (defaults local) metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). Multi-value fields recorded comma-separated values returned form. Custom value serialization responsibility caller. ... Named parameters pass along rsconnect::deployApp()","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish Quarto Documents — quarto_publish_doc","text":"","code":"if (FALSE) { # \\dontrun{ library(quarto) quarto_publish_doc(\"mydoc.qmd\") quarto_publish_app(server = \"shinyapps.io\") quarto_publish_site(server = \"rstudioconnect.example.com\") } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_remove_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Quarto extensions — quarto_remove_extension","title":"Remove a Quarto extensions — quarto_remove_extension","text":"Remove extension folder project running quarto remove","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_remove_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Quarto extensions — quarto_remove_extension","text":"","code":"quarto_remove_extension(   extension = NULL,   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_remove_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Quarto extensions — quarto_remove_extension","text":"extension extension name remove, quarto remove <extension-name>. no_prompt prompt confirm approval download external extension. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line). quarto.quiet R option R_QUARTO_QUIET environment variable can used globally override function call (can useful debug tool calls quarto_* functions directly). Github Actions, always quiet = FALSE. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_remove_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a Quarto extensions — quarto_remove_extension","text":"Returns invisibly TRUE extension removed, FALSE otherwise.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_remove_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a Quarto extensions — quarto_remove_extension","text":"","code":"if (FALSE) { # \\dontrun{ # Remove an already installed extension quarto_remove_extension(\"quarto-ext/fontawesome\") } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Markdown — quarto_render","title":"Render Markdown — quarto_render","text":"Render input file specified output format using quarto. input requires computations (e.g. Rmd Jupyter files) computations performed rendering.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Markdown — quarto_render","text":"","code":"quarto_render(   input = NULL,   output_format = NULL,   output_file = NULL,   execute = TRUE,   execute_params = NULL,   execute_dir = NULL,   execute_daemon = NULL,   execute_daemon_restart = FALSE,   execute_debug = FALSE,   use_freezer = FALSE,   cache = NULL,   cache_refresh = FALSE,   metadata = NULL,   metadata_file = NULL,   debug = FALSE,   quiet = FALSE,   profile = NULL,   quarto_args = NULL,   pandoc_args = NULL,   as_job = getOption(\"quarto.render_as_job\", \"auto\") )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Markdown — quarto_render","text":"input input file project directory rendered (defaults rendering project current working directory). output_format Target output format (defaults \"html\"). option \"\" render formats defined within file project. output_file name output file. using NULL, output filename based filename input file. output_file mapped --output option flag quarto CLI. expected filename , path, relative absolute. execute Whether execute embedded code chunks. execute_params list named parameters override custom params specified within YAML front-matter. execute_dir working directory execute embedded code chunks. execute_daemon Keep Jupyter kernel alive (defaults 300 seconds). Note option applicable rendering Jupyter notebooks Jupyter markdown. execute_daemon_restart Restart keepalive Jupyter kernel render. Note option applicable rendering Jupyter notebooks Jupyter markdown. execute_debug Show debug output Jupyter kernel. use_freezer Force use frozen computations incremental file render. cache Cache execution output (uses knitr cache jupyter-cache respectively Rmd Jupyter input files). cache_refresh Force refresh execution cache. metadata optional named list used override YAML metadata. passed YAML file --metadata-file CLI flag. merged metadata-file options specified. metadata_file yaml file passed --metadata-file CLI flags override metadata. merged metadata specified, low precedence metadata options. debug Leave intermediate files place render. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line). quarto.quiet R option R_QUARTO_QUIET environment variable can used globally override function call (can useful debug tool calls quarto_* functions directly). Github Actions, always quiet = FALSE. profile Quarto project profile(s) use. Either character vector profile names NULL use default profile. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options. pandoc_args Additional command line arguments pass Pandoc. as_job Render RStudio background job. Default \"auto\", render individual documents normally projects background jobs. Use quarto.render_as_job R option control default globally.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Markdown — quarto_render","text":"","code":"if (FALSE) { # \\dontrun{ # Render R Markdown quarto_render(\"notebook.Rmd\") quarto_render(\"notebook.Rmd\", output_format = \"pdf\")  # Render Jupyter Notebook quarto_render(\"notebook.ipynb\")  # Render Jupyter Markdown quarto_render(\"notebook.md\")  # Override metadata quarto_render(\"notebook.Rmd\", metadata = list(lang = \"fr\", execute = list(echo = FALSE))) } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_serve.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve Interactive Document — quarto_serve","title":"Serve Interactive Document — quarto_serve","text":"Serve Shiny interactive document. default, document rendered first served previously rendered document, pass render = FALSE skip rendering.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_serve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve Interactive Document — quarto_serve","text":"","code":"quarto_serve(   input,   render = TRUE,   port = getOption(\"shiny.port\"),   host = getOption(\"shiny.host\", \"127.0.0.1\"),   browse = TRUE )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_serve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve Interactive Document — quarto_serve","text":"input input file run. file server: shiny entry YAML front-matter. render Render document serving . port Port listen (defaults 4848) host Hostname bind (defaults 127.0.0.1) browse Open browser preview content. Defaults using RStudio Viewer running within RStudio.Pass function (e.g. utils::browseURL override behavior).","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_update_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Quarto extensions — quarto_update_extension","title":"Update a Quarto extensions — quarto_update_extension","text":"Update extension folder project running quarto update","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_update_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Quarto extensions — quarto_update_extension","text":"","code":"quarto_update_extension(   extension = NULL,   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_update_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Quarto extensions — quarto_update_extension","text":"extension extension update, either name (.e  quarto update extension <gh-org>/<gh-repo>), archive ( quarto update extension <path--zip>) url (quarto update extension <url>). no_prompt prompt confirm approval download external extension. Setting no_prompt = FALSE means Extension Trust accepted. quiet Suppress warning messages, R also Quarto CLI (.e --quiet passed command line). quarto.quiet R option R_QUARTO_QUIET environment variable can used globally override function call (can useful debug tool calls quarto_* functions directly). Github Actions, always quiet = FALSE. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_update_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Quarto extensions — quarto_update_extension","text":"Returns invisibly TRUE extension updated, FALSE otherwise.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_update_extension.html","id":"extension-trust","dir":"Reference","previous_headings":"","what":"Extension Trust","title":"Update a Quarto extensions — quarto_update_extension","text":"Quarto extensions may execute code documents rendered. Therefore, trust author extension, recommend install use extension. default no_prompt = FALSE means function ask explicit approval used interactively, disallow installation.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_update_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a Quarto extensions — quarto_update_extension","text":"","code":"if (FALSE) { # \\dontrun{ # Update a template and set up a draft document from a GitHub repository quarto_update_extension(\"quarto-ext/fontawesome\")  # Update a template and set up a draft document from a ZIP archive quarto_update_extension(\"https://github.com/quarto-ext/fontawesome/archive/refs/heads/main.zip\") } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a custom format extension template — quarto_use_template","title":"Use a custom format extension template — quarto_use_template","text":"Install use template Quarto using quarto use.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a custom format extension template — quarto_use_template","text":"","code":"quarto_use_template(   template,   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a custom format extension template — quarto_use_template","text":"template template install, either archive GitHub repository described documentation https://quarto.org/docs/extensions/formats.html. no_prompt prompt confirm approval download external extension. quiet Suppress warnings messages. quarto_args Character vector quarto CLI arguments append Quarto command executed function. mainly intended advanced usage useful CLI arguments yet mirrored dedicated parameter R function. See quarto render --help options.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a custom format extension template — quarto_use_template","text":"","code":"if (FALSE) { # \\dontrun{ # Install a template and set up a draft document from a GitHub repository quarto_use_template(\"quarto-journals/jss\")  # Install a template and set up a draft document from a ZIP archive quarto_use_template(\"https://github.com/quarto-journals/jss/archive/refs/heads/main.zip\") } # }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check quarto version — quarto_version","title":"Check quarto version — quarto_version","text":"Determine specific version quarto binary found quarto_path(). returns 99.9.9 means using dev version.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check quarto version — quarto_version","text":"","code":"quarto_version()"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check quarto version — quarto_version","text":"numeric_version quarto version found","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/theme_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a theme for a plotting or table package — theme_colors_flextable","title":"Create a theme for a plotting or table package — theme_colors_flextable","text":"Create theme using background foreground colors (theme_colors_*) using brand.yml file (theme_brand_*).","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/theme_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a theme for a plotting or table package — theme_colors_flextable","text":"","code":"theme_colors_flextable(bg, fg)  theme_brand_flextable(brand_yml)  theme_colors_ggplot2(bg, fg)  theme_brand_ggplot2(brand_yml)  theme_colors_gt(bg, fg)  theme_brand_gt(brand_yml)  theme_colors_plotly(bg, fg)  theme_brand_plotly(brand_yml)  theme_colors_thematic(bg, fg)  theme_brand_thematic(brand_yml)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/theme_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a theme for a plotting or table package — theme_colors_flextable","text":"bg background color fg foreground color brand_yml path brand.yml file","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/theme_helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a theme for a plotting or table package — theme_colors_flextable","text":"use theme depend package. See vignettes usage examples.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"Creates YAML metadata block can dynamically inserted Quarto documents R code chunks. allows setting metadata values based R computations, can used Quarto's conditional content features like -meta {{< meta >}} shortcodes.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"","code":"write_yaml_metadata_block(..., .list = NULL)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"... Named arguments include metadata block. Names become metadata keys values become metadata values. take precedence conflicting keys .list. .list Optional list additional metadata include. useful metadata stored list variable. Keys .list overridden matching keys provided ....","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"character string containing formatted YAML metadata block, wrapped knitr::asis_output() renders raw markdown. Returns NULL invisibly metadata provided.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"function converts R values YAML format wraps YAML delimiters (---). Logical values converted lowercase strings (\"true\"/\"false\") ensure compatibility Quarto's metadata system. ... .list contain key, value ... takes precedence override value .list. metadata provided (empty ... NULL empty .list), function returns NULL without generating output. Important: using function Quarto documents, must set chunk option output: asis (#| output: asis) metadata block properly processed Quarto. addresses limitation Quarto metadata must static set dynamically R code document rendering.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":"quarto-usage","dir":"Reference","previous_headings":"","what":"Quarto Usage","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"use function Quarto document, create R code chunk output: asis option:","code":"```{r} #| output: asis write_yaml_metadata_block(admin = TRUE, version = \"1.0\") Without the `output: asis` option, the YAML metadata block will be displayed as text rather than processed as metadata by Quarto."},{"path":"https://quarto-dev.github.io/quarto-r/reference/write_yaml_metadata_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write YAML Metadata Block for Quarto Documents — write_yaml_metadata_block","text":"","code":"if (FALSE) { # \\dontrun{ # In a Quarto document R chunk with `#| output: asis`: admin <- TRUE user_level <- \"advanced\"  # Set metadata dynamically write_yaml_metadata_block(   admin = admin,   level = user_level,   timestamp = Sys.Date() )  # Use with .list parameter metadata_list <- list(version = \"1.0\", debug = FALSE) write_yaml_metadata_block(.list = metadata_list)  # Direct arguments override .list values base_config <- list(theme = \"dark\", debug = TRUE) write_yaml_metadata_block(   debug = FALSE,  # This overrides debug = TRUE from base_config   author = \"John\",   .list = base_config )  # Then use in Quarto with conditional content: # ::: {.content-visible when-meta=\"admin\"} # Admin-only content here # ::: } # }"},{"path":"https://quarto-dev.github.io/quarto-r/news/index.html","id":"quarto-development-version","dir":"Changelog","previous_headings":"","what":"quarto (development version)","title":"quarto (development version)","text":"Added write_yaml_metadata_block() function dynamically set YAML metadata Quarto documents R code chunks. addresses limitation Quarto metadata must static defined document header. function enables conditional content metadata-driven document behavior based R computations (thanks, @kmasiello, #137, #160). Added debugging logic quarto vignette engine help diagnose issues Quarto vignettes pkgdown context (thanks, @hadley, #185). Set quarto.log.debug = TRUE enable debugging messages (R_QUARTO_LOG_DEBUG = TRUE environment variable). Set quarto.log.file change file path write (R_QUARTO_LOG_FILE environment variable). Default ./quarto-r-debug.log Debug mode automatically debugging Github Actions workflows, Quarto CLI’s environment variable QUARTO_LOG_LEVEL set DEBUG. Added new_blog_post() function (thanks, @topeto, #22). Make quarto_render(as_job = TRUE) wrapable (thanks, @salim-b, #105). Quarto CLI now correctly use R version one used run functions package (#204). Add quarto_available() function check Quarto CLI found (thanks, @hadley, #187). quarto_render() now correctly set as_job inside RStudio IDE required rstudioapi functions available (#203). Add several new wrapper function (thanks, @parmsam, #192): quarto_list_extensions() list installed extensions using quarto list extensions quarto_remove_extension() remove installed extension using quarto remove extensions quarto_update_extension() update installed extension using quarto update extensions quarto_create_project() offers better user experience now (thanks, @jennybc, #206, #153). quarto_preview() gains quiet argument suppress output R Quarto CLI (thanks, @cwickham, #232.) Add helpers function theme_brand_* theme_colors_* help theme dark light brand using common graph table packages (thanks, @gordonwoodhull, #234). Add quarto.quiet options allow verbose error message quarto_* function used inside package. example, inside pkgdown building Quarto vignettes. pkgdown sets quiet = TRUE internally call quarto_render(), setting options(quarto.quiet = TRUE) allows overwrite . quarto_path() now returns normalized path potential symlink resolved, less confusion quarto_binary_sitrep() (thanks, @jennybc). Fix error interactive prompt extension approval (thanks, @wjschne, #212). quarto_path() now correctly return NULL quarto found PATH (thanks, @jeroen, #220, #221). R_QUARTO_QUIET environment variable can used set quarto.quiet option, overrides quiet = TRUE argument passed quarto_* functions. can useful debug Quarto rendering inside packages, like pkgdown. Overrides also now happens GHA debug logging. Correctly report Quarto CLI error background process call quarto fails (thanks, @salim-b, #235)","code":""},{"path":"https://quarto-dev.github.io/quarto-r/news/index.html","id":"quarto-144","dir":"Changelog","previous_headings":"","what":"quarto 1.4.4","title":"quarto 1.4.4","text":"CRAN release: 2024-07-20 quarto_preview() now looks quarto preview log browse correct url inside RStudio viewer (thanks, @aronatkins, #167). package now uses x.y.z.dev versionning scheme indicate development, patch, minor major versions. follows Tidyverse package version conventions. Adapt tests CRAN checks issues due Quarto v1.5.54 regression (though fixed upstream). Approval check quarto_add_extension() quarto_use_template() now works correctly (thanks, @eveyp, #172).","code":""},{"path":"https://quarto-dev.github.io/quarto-r/news/index.html","id":"quarto-14","dir":"Changelog","previous_headings":"","what":"quarto 1.4","title":"quarto 1.4","text":"CRAN release: 2024-03-06 version now adapted Quarto 1.4 latest stable release. Add registration vignette engine use quarto vignette builder, use .qmd file vignette. See vignette(\"hello\", package = \"quarto\"). (thanks, @dcnorris, #57). New quarto_binary_sitrep() checks possible difference Quarto binary used package, one used RStudio IDE (thanks, @jthomasmock, #12). New is_using_quarto() check directory requires using Quarto (.e. _quarto.yml least one *.qmd file) (thanks, @hadley, #103). New quarto_create_project() calls quarto create project <type> <name> (thanks, @maelle, #87). New quarto_add_extension() quarto_use_template() deal Quarto extensions Quarto project. (thanks, @mcanouil, #45, @remlapmot, #42). quarto_render() quarto_inspect() gains profile argument (thanks, @andrewheiss, #95, @salim-b, #123). quarto_render() gains metadata metadata_file arguments. can used pass modified Quarto metadata render time. set, metadata merged metadata_file content. Internally, metadata passed --metadata-file quarto render (thanks, @mcanouil, #52, @maelle, #49). quarto_render() relevant functions gain quarto_args argument. allows pass additional options flag quarto CLI. advanced usage e.g. new options added Quarto CLI user-facing package’s functions (thanks, @gadenbuie, #125). Add quiet argument functions remove warnings messages. default FALSE function match quarto CLI default. quarto_render(), execute_params now converts boolean value true/false correctly expected quarto render (thanks, @marianklose, #124). Error message now advises re-run quiet = FALSE quarto_render(quiet = TRUE) run quarto render quiet mode (thanks @gadenbuie, #126, @wlandau, #16). rsconnect R package dependency moved Suggest reduce package’s overall number dependencies. rsconnect package required publishing using quarto_publish_*() functions. Users prompted install (interactive mode) installed. Added NEWS.md file track changes package.","code":""}]
